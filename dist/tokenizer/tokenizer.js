export function tokenizer(data, scanner, skipTypes) {
  return new Promise(async (resolve, reject) => {
    let result = new Array();
    scanner.setData(data);
    let token;

    while (scanner.available() > 0) {
      token = scanner.next();

      if (token.type == "error") {
        reject(`${token.data}`);
        break;
      } //basically for comments, and white space


      if (skipTypes) {
        if (skipTypes.includes(token.type)) {//don't add it
        } else {
          result.push(token);
        }
      } else {
        result.push(token);
      }
    }

    resolve(result);
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90b2tlbml6ZXIvdG9rZW5pemVyLnRzIl0sIm5hbWVzIjpbInRva2VuaXplciIsImRhdGEiLCJzY2FubmVyIiwic2tpcFR5cGVzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJyZXN1bHQiLCJBcnJheSIsInNldERhdGEiLCJ0b2tlbiIsImF2YWlsYWJsZSIsIm5leHQiLCJ0eXBlIiwiaW5jbHVkZXMiLCJwdXNoIl0sIm1hcHBpbmdzIjoiQUFJQSxPQUFPLFNBQVNBLFNBQVQsQ0FBbUJDLElBQW5CLEVBQWlDQyxPQUFqQyxFQUFtREMsU0FBbkQsRUFBb0c7QUFDekcsU0FBTyxJQUFJQyxPQUFKLENBQVksT0FBT0MsT0FBUCxFQUFnQkMsTUFBaEIsS0FBMkI7QUFDNUMsUUFBSUMsTUFBb0IsR0FBRyxJQUFJQyxLQUFKLEVBQTNCO0FBRUFOLElBQUFBLE9BQU8sQ0FBQ08sT0FBUixDQUFnQlIsSUFBaEI7QUFFQSxRQUFJUyxLQUFKOztBQUVBLFdBQU9SLE9BQU8sQ0FBQ1MsU0FBUixLQUFzQixDQUE3QixFQUFnQztBQUM5QkQsTUFBQUEsS0FBSyxHQUFHUixPQUFPLENBQUNVLElBQVIsRUFBUjs7QUFDQSxVQUFJRixLQUFLLENBQUNHLElBQU4sSUFBYyxPQUFsQixFQUEyQjtBQUN6QlAsUUFBQUEsTUFBTSxDQUFFLEdBQUVJLEtBQUssQ0FBQ1QsSUFBSyxFQUFmLENBQU47QUFDQTtBQUNELE9BTDZCLENBTTlCOzs7QUFDQSxVQUFJRSxTQUFKLEVBQWU7QUFDYixZQUFJQSxTQUFTLENBQUNXLFFBQVYsQ0FBbUJKLEtBQUssQ0FBQ0csSUFBekIsQ0FBSixFQUFvQyxDQUNsQztBQUNELFNBRkQsTUFFTztBQUNMTixVQUFBQSxNQUFNLENBQUNRLElBQVAsQ0FBWUwsS0FBWjtBQUNEO0FBQ0YsT0FORCxNQU1PO0FBQ0xILFFBQUFBLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZTCxLQUFaO0FBQ0Q7QUFDRjs7QUFFREwsSUFBQUEsT0FBTyxDQUFDRSxNQUFELENBQVA7QUFDRCxHQTFCTSxDQUFQO0FBMkJEIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBUb2tlbiB9IGZyb20gXCIuL3Rva2VuLmpzXCI7XG5pbXBvcnQgeyBTY2FubmVyIH0gZnJvbSBcIi4vc2Nhbm5lci5qc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gdG9rZW5pemVyKGRhdGE6IHN0cmluZywgc2Nhbm5lcjogU2Nhbm5lciwgc2tpcFR5cGVzPzpBcnJheTxzdHJpbmc+KTogUHJvbWlzZTxBcnJheTxUb2tlbj4+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBsZXQgcmVzdWx0OiBBcnJheTxUb2tlbj4gPSBuZXcgQXJyYXkoKTtcblxuICAgIHNjYW5uZXIuc2V0RGF0YShkYXRhKTtcblxuICAgIGxldCB0b2tlbjogVG9rZW47XG5cbiAgICB3aGlsZSAoc2Nhbm5lci5hdmFpbGFibGUoKSA+IDApIHtcbiAgICAgIHRva2VuID0gc2Nhbm5lci5uZXh0KCk7XG4gICAgICBpZiAodG9rZW4udHlwZSA9PSBcImVycm9yXCIpIHtcbiAgICAgICAgcmVqZWN0KGAke3Rva2VuLmRhdGF9YCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgLy9iYXNpY2FsbHkgZm9yIGNvbW1lbnRzLCBhbmQgd2hpdGUgc3BhY2VcbiAgICAgIGlmIChza2lwVHlwZXMpIHtcbiAgICAgICAgaWYgKHNraXBUeXBlcy5pbmNsdWRlcyh0b2tlbi50eXBlKSkge1xuICAgICAgICAgIC8vZG9uJ3QgYWRkIGl0XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVzdWx0LnB1c2godG9rZW4pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHQucHVzaCh0b2tlbik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmVzb2x2ZShyZXN1bHQpO1xuICB9KTtcbn1cbiJdfQ==